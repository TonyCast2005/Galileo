[gd_scene load_steps=4 format=3 uid="uid://58a32yh47ao7"]

[ext_resource type="Script" uid="uid://3wa0xcwmvlmi" path="res://escenas/Tipos_preguntas/Arrastrar_y_Soltar/bloque.gd" id="1_qbxhm"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_a7f2l"]
bg_color = Color(0.356912, 0.251651, 0.502396, 1)
corner_radius_top_left = 40
corner_radius_top_right = 40
corner_radius_bottom_right = 40
corner_radius_bottom_left = 40

[sub_resource type="GDScript" id="GDScript_bvxcw"]
script/source = "extends Label

var is_dragging := false
var mouse_offset := Vector2.ZERO
	
func _input(event):
	if event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT:
		if event.pressed and get_global_rect().has_point(event.position):
			# Comienza el arrastre
			is_dragging = true
			mouse_offset = event.position - global_position
			modulate = Color(1, 1, 0.7) # Feedback visual
		elif not event.pressed and is_dragging:
			# Suelta el bloque
			is_dragging = false
			modulate = Color(1, 1, 1)
			_snap_to_drop_zone()  # Detecta si se soltó en un recipiente

func _process(_delta):
	if is_dragging:
		global_position = get_global_mouse_position() - mouse_offset


# ---------------------------------------------------------
# Detectar zonas de soltar (recipientes)
# ---------------------------------------------------------
func _snap_to_drop_zone():
	var space_state = get_world_2d().direct_space_state
	
	var query := PhysicsPointQueryParameters2D.new()
	query.position = global_position
	query.collide_with_areas = true
	query.collide_with_bodies = true
	
	var result = space_state.intersect_point(query)
	
	for hit in result:
		if hit.collider.is_in_group(\"dropable\"):
			print(\"Bloque soltado en un recipiente\")
			
			# Suaviza el encaje con un tween (opcional)
			var tween := get_tree().create_tween()
			tween.tween_property(self, \"global_position\", hit.collider.global_position, 0.2).set_ease(Tween.EASE_OUT)
			
			return

	print(\"Bloque soltado fuera de recipientes\")
"

[node name="Bloque" type="Node2D"]
script = ExtResource("1_qbxhm")

[node name="Label" type="Label" parent="."]
custom_minimum_size = Vector2(60, 10)
anchors_preset = -1
anchor_left = 0.019
anchor_top = 0.027
anchor_right = 0.364
anchor_bottom = 0.088
offset_left = -6.624
offset_top = 17.3
offset_right = 215.256
offset_bottom = 64.2
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/normal = SubResource("StyleBoxFlat_a7f2l")
text = "Opción"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 2
script = SubResource("GDScript_bvxcw")
